1. ARRAY
        An array is a collection of items stores at contiguous memeory locations. The idea is to store multiple items of the same type together. This makes it easier to calculate the position of each element by simply adding an offset to a base value.

2. LINKED LISTS
        Like arrays, Linked List is a linear data structure. Unlike arrays, linked list elements are not stores at a contguous location; the elements are linked using pointers

3. STACK
        Stack is a linear data structure which follows a particular order in which the operations are performed. The order may be LIFO (LAst in First Out) or FILO (First In Last Out)
            Basic operations perfromed in the stack:
            - Push:
                Adds an item in the stack. If the stack is full, then it is said to be ann Overflow condition
            - Pop: 
                Removes an item from the stack. The items are popped in the reversed order in which they are pushed. If the stack is empty, then it is said to be an Underflow condition
            -Peek or Top
                Returns top element of the stack
            -isEmpty:
                Returns true if the stack is empty, else false

4. QUEUE
        Like Stack, Queue is a linear structure which follows a particular order in which the operations are performed. The ordre is First in First Out (FIFO). A good example of the queue is any queue of consumers for a resource where the consumer that came first is served first. The difference between stacks and queues is in removing. In a stack we remove the item the most recently added; in a queue we remove the item least recently added.
            Basic operation performed on a queue:
            -Enqueue
                Adds an item to the queue. If the queue is full, then it is said to be an Overflow condition
            -Dequeue
                Removes an item from the queue. The items are poppedi nthe same order in which they are pushed. If the queu is empty, then it is said to be an Underflow condition.
            -Front
                Get the front item from the queue
            -Rear
                Get the last item from the queue

5. BINARY TREE
        Unlike Arrays, Linked Lists, Stack and Queues, which are linear data structures, trees are hierarchical data strucutres. A binary tree is a data structure in which each node has at most tow childere, which are referred to as the left and right child. It is implemented mainly using Links. A binary tree is represented by a pointer to the top most node in the tree. If the tree is empty, then the value of root is NULL.
            A binary tree node containts the following parts:
            1. data
            2. pointer to left child
            3. pointer to right child
    
6. BINARY SEARCH TREE
        A Binary Search Tree is a Binary Tree with the following additional properties:
        -The left subtree of a node contains only nodes with keys less than the node's key
        - The right subtree of a node containts only nodes with keys greater than the node's key
        - The left and right subtree each must also be a binary search tree

7. HEAP
        A Heap is a spectial Tree-Based data structure in which the tree is a complere binary tree. Generally, Heaps can be of two types:
        -Max-Heap
            The key present at the root node must be greatest among the keys present at all of its children. Same property must be recrusively true for all sub-trees in that Binary Tree
        -Min-Heap
            The key present at the root node must be minimum among the keys present at all of its children. Same property must be recrusively true for all sub-trees in that Binary Tree

8. Hashin Data structure
        Hashing is an important Data Structure which is desinged to use a special function called the Hash function, which is used to map a given value with a perticular key for faster access of elements. The efficiency of mapping depends on the effiecincy of the hash function used.
        Let a hash function H(x) maps the value x at the index x%10 in an Array. For example, if the list of values is [11, 12, 13, 14, 15] it will be stored at positions {1, 2, 3, 4, 5} in the array or Hash table respectively.

9. Matrix
        A matrix represents a collection of numbers arranged in an order of rows and columns. It is necessary to enclose the elements of a matrix in parentheses or brackets.

10. Trie
        Trie is an efficient information reTrieval data structure. Using Trie, search complexities can be brought to an optimal limit (key length). If we store keys in the binary search tree, a well-balanced BST will need time proportional to M * log N, where M is maximum string length and N is the number of keys in the tree. Using Trie, we can search the key in O(M) time. However, the penalty is on Trie storage requirements. 